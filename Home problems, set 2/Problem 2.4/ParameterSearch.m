clear all;

debug = true;

data = LoadFunctionData();

numberOfVariableRegisters = 7;
constants = [1 3 -1];
numberOfOperators = 4; % +, -, *, /
minNumberOfInstructions = 5;
maxNumberOfInstructions = 25;
tournamentSize = 5;
tournamentSelectionParameter = 0.75;
crossoverProbability = 0.20;
mutationProbability = 0.02;
mutationVariationFactor = 1.1;
minDiversity = 0.25;
maxDiversity = 0.25;
elitismCount = 1;
populationSize = 100;
numberOfGenerations = 100;
numberOfRuns = 1;

minErrorFound = inf;

for iRun = 1:numberOfRuns
    [bestChromosome, minError] = LGPWrapper( ...
        data, ...
        numberOfVariableRegisters, ...
        constants, ...
        numberOfOperators, ...
        minNumberOfInstructions, ...
        maxNumberOfInstructions, ...
        tournamentSize, ...
        tournamentSelectionParameter, ...
        crossoverProbability, ...
        mutationProbability, ...
        mutationVariationFactor, ...
        minDiversity, ...
        maxDiversity, ...
        elitismCount, ...
        populationSize, ...
        numberOfGenerations, ...
        debug);
    fprintf('Run %d: error = %.5f, bestChromosome = [%s];\n', iRun, minError, sprintf('%d ', bestChromosome));
    
    if minError < minErrorFound
        minErrorFound = minError;
        bestChromosomeFound = bestChromosome;
    end
end

fprintf('Best result: error = %.5f, bestChromosome = [%s];\n', minErrorFound, sprintf('%d ', bestChromosomeFound));
